// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id           String        @id @default(uuid()) @db.Uuid
  name         String
  ci           String        @unique
  career       String
  TeamStudents TeamStudent[]
}

model Team {
  id                       String            @id @default(uuid()) @db.Uuid
  name                     String
  TeamModalities           TeamModality[]
  TeamStudents             TeamStudent[]
  FutsalMatchesAsTeam1     FutsalMatch[]     @relation("Team1FutsalMatches")
  FutsalMatchesAsTeam2     FutsalMatch[]     @relation("Team2FutsalMatches")
  VolleyballMatchesAsTeam1 VolleyballMatch[] @relation("Team1VolleyballMatches")
  VolleyballMatchesAsTeam2 VolleyballMatch[] @relation("Team2VolleyballMatches")
}

model Modality {
  id             String         @id @default(uuid()) @db.Uuid
  name           String
  TeamModalities TeamModality[]
}

model TeamModality {
  id         String   @id @default(uuid()) @db.Uuid
  team       Team     @relation(fields: [teamId], references: [id])
  teamId     String   @db.Uuid
  modality   Modality @relation(fields: [modalityId], references: [id])
  modalityId String   @db.Uuid
}

model TeamStudent {
  id        String  @id @default(uuid()) @db.Uuid
  team      Team    @relation(fields: [teamId], references: [id])
  teamId    String  @db.Uuid
  student   Student @relation(fields: [studentId], references: [id])
  studentId String  @db.Uuid
}

model FutsalMatch {
  id         String   @id @default(uuid()) @db.Uuid
  team1      Team     @relation("Team1FutsalMatches", fields: [team1Id], references: [id])
  team1Id    String   @db.Uuid
  team2      Team     @relation("Team2FutsalMatches", fields: [team2Id], references: [id])
  team2Id    String   @db.Uuid
  team1Goals Int
  team2Goals Int
  matchDate  DateTime @default(now())
}

model VolleyballMatch {
  id          String   @id @default(uuid()) @db.Uuid
  team1       Team     @relation("Team1VolleyballMatches", fields: [team1Id], references: [id])
  team1Id     String   @db.Uuid
  team2       Team     @relation("Team2VolleyballMatches", fields: [team2Id], references: [id])
  team2Id     String   @db.Uuid
  team1Sets   Int[]
  team2Sets   Int[]
  team1Points Int
  team2Points Int
  matchDate   DateTime @default(now())
}
